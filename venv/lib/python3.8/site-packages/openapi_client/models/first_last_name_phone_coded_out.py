# coding: utf-8

"""
    NamSor API v2

    NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it!   # noqa: E501

    OpenAPI spec version: 2.0.10
    Contact: contact@namsor.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class FirstLastNamePhoneCodedOut(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'international_phone_number_verified': 'str',
        'phone_country_iso2_verified': 'str',
        'phone_country_code': 'int',
        'phone_country_code_alt': 'int',
        'phone_country_iso2': 'str',
        'phone_country_iso2_alt': 'str',
        'origin_country_iso2': 'str',
        'origin_country_iso2_alt': 'str',
        'phone_number': 'str',
        'verified': 'bool',
        'score': 'float',
        'country_iso2': 'str'
    }

    attribute_map = {
        'id': 'id',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'international_phone_number_verified': 'internationalPhoneNumberVerified',
        'phone_country_iso2_verified': 'phoneCountryIso2Verified',
        'phone_country_code': 'phoneCountryCode',
        'phone_country_code_alt': 'phoneCountryCodeAlt',
        'phone_country_iso2': 'phoneCountryIso2',
        'phone_country_iso2_alt': 'phoneCountryIso2Alt',
        'origin_country_iso2': 'originCountryIso2',
        'origin_country_iso2_alt': 'originCountryIso2Alt',
        'phone_number': 'phoneNumber',
        'verified': 'verified',
        'score': 'score',
        'country_iso2': 'countryIso2'
    }

    def __init__(self, id=None, first_name=None, last_name=None, international_phone_number_verified=None, phone_country_iso2_verified=None, phone_country_code=None, phone_country_code_alt=None, phone_country_iso2=None, phone_country_iso2_alt=None, origin_country_iso2=None, origin_country_iso2_alt=None, phone_number=None, verified=None, score=None, country_iso2=None):  # noqa: E501
        """FirstLastNamePhoneCodedOut - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._first_name = None
        self._last_name = None
        self._international_phone_number_verified = None
        self._phone_country_iso2_verified = None
        self._phone_country_code = None
        self._phone_country_code_alt = None
        self._phone_country_iso2 = None
        self._phone_country_iso2_alt = None
        self._origin_country_iso2 = None
        self._origin_country_iso2_alt = None
        self._phone_number = None
        self._verified = None
        self._score = None
        self._country_iso2 = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if international_phone_number_verified is not None:
            self.international_phone_number_verified = international_phone_number_verified
        if phone_country_iso2_verified is not None:
            self.phone_country_iso2_verified = phone_country_iso2_verified
        if phone_country_code is not None:
            self.phone_country_code = phone_country_code
        if phone_country_code_alt is not None:
            self.phone_country_code_alt = phone_country_code_alt
        if phone_country_iso2 is not None:
            self.phone_country_iso2 = phone_country_iso2
        if phone_country_iso2_alt is not None:
            self.phone_country_iso2_alt = phone_country_iso2_alt
        if origin_country_iso2 is not None:
            self.origin_country_iso2 = origin_country_iso2
        if origin_country_iso2_alt is not None:
            self.origin_country_iso2_alt = origin_country_iso2_alt
        if phone_number is not None:
            self.phone_number = phone_number
        if verified is not None:
            self.verified = verified
        if score is not None:
            self.score = score
        if country_iso2 is not None:
            self.country_iso2 = country_iso2

    @property
    def id(self):
        """Gets the id of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The id of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FirstLastNamePhoneCodedOut.


        :param id: The id of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def first_name(self):
        """Gets the first_name of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The first_name of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this FirstLastNamePhoneCodedOut.


        :param first_name: The first_name of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The last_name of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this FirstLastNamePhoneCodedOut.


        :param last_name: The last_name of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def international_phone_number_verified(self):
        """Gets the international_phone_number_verified of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The international_phone_number_verified of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._international_phone_number_verified

    @international_phone_number_verified.setter
    def international_phone_number_verified(self, international_phone_number_verified):
        """Sets the international_phone_number_verified of this FirstLastNamePhoneCodedOut.


        :param international_phone_number_verified: The international_phone_number_verified of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._international_phone_number_verified = international_phone_number_verified

    @property
    def phone_country_iso2_verified(self):
        """Gets the phone_country_iso2_verified of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The phone_country_iso2_verified of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._phone_country_iso2_verified

    @phone_country_iso2_verified.setter
    def phone_country_iso2_verified(self, phone_country_iso2_verified):
        """Sets the phone_country_iso2_verified of this FirstLastNamePhoneCodedOut.


        :param phone_country_iso2_verified: The phone_country_iso2_verified of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._phone_country_iso2_verified = phone_country_iso2_verified

    @property
    def phone_country_code(self):
        """Gets the phone_country_code of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The phone_country_code of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: int
        """
        return self._phone_country_code

    @phone_country_code.setter
    def phone_country_code(self, phone_country_code):
        """Sets the phone_country_code of this FirstLastNamePhoneCodedOut.


        :param phone_country_code: The phone_country_code of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: int
        """

        self._phone_country_code = phone_country_code

    @property
    def phone_country_code_alt(self):
        """Gets the phone_country_code_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The phone_country_code_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: int
        """
        return self._phone_country_code_alt

    @phone_country_code_alt.setter
    def phone_country_code_alt(self, phone_country_code_alt):
        """Sets the phone_country_code_alt of this FirstLastNamePhoneCodedOut.


        :param phone_country_code_alt: The phone_country_code_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: int
        """

        self._phone_country_code_alt = phone_country_code_alt

    @property
    def phone_country_iso2(self):
        """Gets the phone_country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The phone_country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._phone_country_iso2

    @phone_country_iso2.setter
    def phone_country_iso2(self, phone_country_iso2):
        """Sets the phone_country_iso2 of this FirstLastNamePhoneCodedOut.


        :param phone_country_iso2: The phone_country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._phone_country_iso2 = phone_country_iso2

    @property
    def phone_country_iso2_alt(self):
        """Gets the phone_country_iso2_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The phone_country_iso2_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._phone_country_iso2_alt

    @phone_country_iso2_alt.setter
    def phone_country_iso2_alt(self, phone_country_iso2_alt):
        """Sets the phone_country_iso2_alt of this FirstLastNamePhoneCodedOut.


        :param phone_country_iso2_alt: The phone_country_iso2_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._phone_country_iso2_alt = phone_country_iso2_alt

    @property
    def origin_country_iso2(self):
        """Gets the origin_country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The origin_country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._origin_country_iso2

    @origin_country_iso2.setter
    def origin_country_iso2(self, origin_country_iso2):
        """Sets the origin_country_iso2 of this FirstLastNamePhoneCodedOut.


        :param origin_country_iso2: The origin_country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._origin_country_iso2 = origin_country_iso2

    @property
    def origin_country_iso2_alt(self):
        """Gets the origin_country_iso2_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The origin_country_iso2_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._origin_country_iso2_alt

    @origin_country_iso2_alt.setter
    def origin_country_iso2_alt(self, origin_country_iso2_alt):
        """Sets the origin_country_iso2_alt of this FirstLastNamePhoneCodedOut.


        :param origin_country_iso2_alt: The origin_country_iso2_alt of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._origin_country_iso2_alt = origin_country_iso2_alt

    @property
    def phone_number(self):
        """Gets the phone_number of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The phone_number of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this FirstLastNamePhoneCodedOut.


        :param phone_number: The phone_number of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    @property
    def verified(self):
        """Gets the verified of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The verified of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this FirstLastNamePhoneCodedOut.


        :param verified: The verified of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: bool
        """

        self._verified = verified

    @property
    def score(self):
        """Gets the score of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The score of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this FirstLastNamePhoneCodedOut.


        :param score: The score of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: float
        """

        self._score = score

    @property
    def country_iso2(self):
        """Gets the country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501


        :return: The country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :rtype: str
        """
        return self._country_iso2

    @country_iso2.setter
    def country_iso2(self, country_iso2):
        """Sets the country_iso2 of this FirstLastNamePhoneCodedOut.


        :param country_iso2: The country_iso2 of this FirstLastNamePhoneCodedOut.  # noqa: E501
        :type: str
        """

        self._country_iso2 = country_iso2

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FirstLastNamePhoneCodedOut):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
